from flask import Flask , request,jsonify
import numpy as np
import pandas as pd
import pickle
from joblib import load

app = Flask(__name__)
model = load('xgboostmodel.joblib')

@app.route("/",methods = ['POST'])
def prediction():
    data = request.get_json(force=True)
    state_name = data['state']
    season = data['season']
    crop = data['crop']
    area = float(data['area'])
    df2 = pd.DataFrame(0,index = range(1), columns = ['Area',
 'State_Name_AndamanandNicobarIslands',
 'State_Name_AndhraPradesh',
 'State_Name_ArunachalPradesh',
 'State_Name_Assam',
 'State_Name_Bihar',
 'State_Name_Chandigarh',
 'State_Name_Chhattisgarh',
 'State_Name_DadraandNagarHaveli',
 'State_Name_Goa',
 'State_Name_Gujarat',
 'State_Name_Haryana',
 'State_Name_HimachalPradesh',
 'State_Name_JammuandKashmir',
 'State_Name_Jharkhand',
 'State_Name_Karnataka',
 'State_Name_Kerala',
 'State_Name_MadhyaPradesh',
 'State_Name_Maharashtra',
 'State_Name_Manipur',
 'State_Name_Meghalaya',
 'State_Name_Mizoram',
 'State_Name_Nagaland',
 'State_Name_Odisha',
 'State_Name_Puducherry',
 'State_Name_Punjab',
 'State_Name_Rajasthan',
 'State_Name_Sikkim',
 'State_Name_TamilNadu',
 'State_Name_Telangana',
 'State_Name_Tripura',
 'State_Name_UttarPradesh',
 'State_Name_Uttarakhand',
 'State_Name_WestBengal',
 'Season_Autumn',
 'Season_Kharif',
 'Season_Rabi',
 'Season_Summer',
 'Season_WholeYear',
 'Season_Winter',
 'Crop_Apple',
 'Crop_Arcanut(Processed)',
 'Crop_Arecanut',
 'Crop_Arhar/Tur',
 'Crop_AshGourd',
 'Crop_Atcanut(Raw)',
 'Crop_Bajra',
 'Crop_Banana',
 'Crop_Barley',
 'Crop_Bean',
 'Crop_Beans&Mutter(Vegetable)',
 'Crop_BeetRoot',
 'Crop_Ber',
 'Crop_Bhindi',
 'Crop_BitterGourd',
 'Crop_Blackgram',
 'Crop_Blackpepper',
 'Crop_BottleGourd',
 'Crop_Brinjal',
 'Crop_Cabbage',
 'Crop_Cardamom',
 'Crop_Carrot',
 'Crop_Cashewnut',
 'Crop_CashewnutProcessed',
 'Crop_CashewnutRaw',
 'Crop_Castorseed',
 'Crop_Cauliflower',
 'Crop_CitrusFruit',
 'Crop_Coconut',
 'Crop_Coffee',
 'Crop_Colocosia',
 'Crop_Cond-spcsother',
 'Crop_Coriander',
 'Crop_Cotton(lint)',
 'Crop_Cowpea(Lobia)',
 'Crop_Cucumber',
 'Crop_DrumStick',
 'Crop_Drychillies',
 'Crop_Dryginger',
 'Crop_Garlic',
 'Crop_Ginger',
 'Crop_Gram',
 'Crop_Grapes',
 'Crop_Groundnut',
 'Crop_Guarseed',
 'Crop_Horse-gram',
 'Crop_JackFruit',
 'Crop_Jobster',
 'Crop_Jowar',
 'Crop_Jute',
 'Crop_Jute&mesta',
 'Crop_Kapas',
 'Crop_Khesari',
 'Crop_Korra',
 'Crop_Lab-Lab',
 'Crop_Lemon',
 'Crop_Lentil',
 'Crop_Linseed',
 'Crop_Litchi',
 'Crop_Maize',
 'Crop_Mango',
 'Crop_Masoor',
 'Crop_Mesta',
 'Crop_Moong(GreenGram)',
 'Crop_Moth',
 'Crop_Nigerseed',
 'Crop_Oilseedstotal',
 'Crop_Onion',
 'Crop_Orange',
 'Crop_OtherCereals&Millets',
 'Crop_OtherCitrusFruit',
 'Crop_OtherDryFruit',
 'Crop_OtherFreshFruits',
 'Crop_OtherKharifpulses',
 'Crop_OtherRabipulses',
 'Crop_OtherVegetables',
 'Crop_Paddy',
 'Crop_Papaya',
 'Crop_Peach',
 'Crop_Pear',
 'Crop_Peas&beans(Pulses)',
 'Crop_Peas(vegetable)',
 'Crop_Perilla',
 'Crop_Pineapple',
 'Crop_Plums',
 'Crop_PomeFruit',
 'Crop_PomeGranet',
 'Crop_Potato',
 'Crop_Pulsestotal',
 'Crop_PumpKin',
 'Crop_Ragi',
 'Crop_RajmashKholar',
 'Crop_Rapeseed&Mustard',
 'Crop_Redish',
 'Crop_RibedGuard',
 'Crop_Rice',
 'Crop_Ricebean(nagadal)',
 'Crop_Rubber',
 'Crop_Safflower',
 'Crop_Samai',
 'Crop_Sannhamp',
 'Crop_Sapota',
 'Crop_Sesamum',
 'Crop_Smallmillets',
 'Crop_SnakGuard',
 'Crop_Soyabean',
 'Crop_Sugarcane',
 'Crop_Sunflower',
 'Crop_Sweetpotato',
 'Crop_Tapioca',
 'Crop_Tea',
 'Crop_Tobacco',
 'Crop_Tomato',
 'Crop_Totalfoodgrain',
 'Crop_Turmeric',
 'Crop_Turnip',
 'Crop_Urad',
 'Crop_Varagu',
 'Crop_WaterMelon',
 'Crop_Wheat',
 'Crop_Yam',
 'Crop_otherfibres',
 'Crop_othermisc.pulses',
 'Crop_otheroilseeds'])
    df2['State_Name_'+state_name] = 1
    df2['Season_'+season] = 1
    df2['Crop_'+crop] = 1
    df2['Area'] = area
    print(df2.shape)
    Production = model.predict(df2)
    return (str(Production*area))

if __name__ == '__main__':
    app.run(port=5000, debug=True)

